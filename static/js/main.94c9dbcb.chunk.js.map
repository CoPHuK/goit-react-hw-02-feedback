{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Feadback/Feedback.module.css","Components/Notification/Notification.module.css","Components/Section/Section.module.css","Components/Feadback/Feadback.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","Components/Section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","btn_list","map","option","list","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","text","Notification","message","Section","title","children","App","state","changeFeedbackValue","e","target","setState","prevState","countTotalFeedback","countPositiveFbPercentage","Math","round","this","totalFb","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,iBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,yB,6JCoBXC,EAhBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIC,UAAWC,IAAEC,SAAjB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,oBAAIJ,UAAWC,IAAEI,KAAjB,SACE,wBACEC,KAAMF,EACNG,KAAK,SACLC,QAAST,EAHX,SAKGK,KANuBA,S,gBCQnBK,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKd,UAAWC,IAAEc,WAAlB,UACE,oBAAGf,UAAWC,IAAEe,KAAhB,mBAA6BN,KAC7B,oBAAGV,UAAWC,IAAEe,KAAhB,sBAAgCL,KAChC,oBAAGX,UAAWC,IAAEe,KAAhB,kBAA4BJ,KAC5B,oBAAGZ,UAAWC,IAAEe,KAAhB,oBAA8BH,KAC9B,oBAAGb,UAAWC,IAAEe,KAAhB,gCAA0CF,EAA1C,W,gBCHSG,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,sBAAMlB,UAAWC,IAAEiB,QAAnB,SAA6BA,K,iBCOvBC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIrB,UAAWC,IAAEmB,MAAjB,SAAyBA,IACxBC,MCwDQC,G,kNAvDbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,oBAAsB,SAACC,GACrB,IAAMnB,EAAOmB,EAAEC,OAAOpB,KACtB,EAAKqB,UAAS,SAACC,GAAD,sBACXtB,EAAOsB,EAAUtB,GAAQ,O,EAI9BuB,mBAAqB,WAAO,IAAD,EACM,EAAKN,MAEpC,OAHyB,EACjBb,KADiB,EACXC,QADW,EACFC,K,EAKzBkB,0BAA4B,WAI1B,OAHmBC,KAAKC,MACrB,EAAKT,MAAMb,MAAQ,EAAKa,MAAMb,KAAO,EAAKa,MAAMX,KAAQ,M,4CAI7D,WAAU,IAAD,EACwBqB,KAAKV,MAA5Bb,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBsB,EAAUD,KAAKJ,qBAErB,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CAASoB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEtB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBkC,KAAKT,wBAG1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACe,IAAZc,EACC,cAAC,EAAD,CAAchB,QAAQ,sBAEtB,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,KAAKJ,qBACZf,mBAAoBmB,KAAKH,uC,GA/CrBK,cCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.94c9dbcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__f9VuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__346xs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3bAC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__I9n4g\"};","import React from \"react\";\r\nimport s from \"./Feedback.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <ul className={s.btn_list}>\r\n    {options.map((option) => (\r\n      <li className={s.list} key={option}>\r\n        <button\r\n          name={option}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={s.statistics}>\r\n      <p className={s.text}>Good: {good}</p>\r\n      <p className={s.text}>Neutral: {neutral}</p>\r\n      <p className={s.text}>Bad: {bad}</p>\r\n      <p className={s.text}>Total: {total}</p>\r\n      <p className={s.text}>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport s from \"../Notification/Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <span className={s.message}>{message}</span>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: propTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./Components/Feadback/Feadback\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport Notification from \"./Components/Notification/Notification\";\nimport Section from \"./Components/Section/Section\";\nimport \"./style.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeFeedbackValue = (e) => {\n    const name = e.target.name;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFbPercentage = () => {\n    const percentage = Math.round(\n      (this.state.good / (this.state.good + this.state.bad)) * 100\n    );\n    return percentage;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFb = this.countTotalFeedback();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.changeFeedbackValue}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFb === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFbPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}